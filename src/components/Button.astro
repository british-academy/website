---
import type { HTMLAttributes } from "astro/types"
import { twMerge } from "tailwind-merge"
import Icon from "~/components/Icon.astro"

type CommonProps = {
  color?: "primary" | "secondary" | "default" | "alternative" | "dark" | "light" | "green" | "red" | "yellow" | "purple"
  size?: "xs" | "sm" | "base" | "lg" | "xl" | "square"
  "icon-class"?: string
  "icon-left"?: string
  "icon-right"?: string
  rounded?: "full" | "lg" | "md"
  outline?: boolean
}

export type ButtonProps = CommonProps &
  HTMLAttributes<"button"> & {
    type: "button" | "submit"
  }

export type AnchorProps = CommonProps &
  HTMLAttributes<"a"> & {
    type: "link"
    href: string
  }

export type Props = ButtonProps | AnchorProps
const {
  type,
  rounded,
  color,
  size,
  "icon-class": iconClass,
  "icon-left": iconLeft,
  "icon-right": iconRight,
  class: clsList,
  ...attrs
} = Astro.props

const cls = twMerge(
  ...[
    "inline-flex items-center justify-center font-medium focus:outline-none focus:ring-4",

    rounded === "md" && "rounded-md",
    rounded === "lg" && "rounded-lg",
    rounded === "full" && "rounded-full",

    color === "primary" && "text-white bg-primary-600 hover:bg-primary-700 focus:ring-primary-800",
    color === "secondary" && "text-white bg-secondary-600 hover:bg-secondary-700 focus:ring-secondary-800",
    color === "default" &&
      "text-white bg-blue-700 hover:bg-blue-800 focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800",
    color === "alternative" &&
      "text-gray-900 bg-white border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:ring-gray-100 dark:focus:ring-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700",
    color === "dark" &&
      "text-gray-900 bg-white border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:ring-gray-100 dark:focus:ring-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700",
    color === "light" &&
      "text-gray-900 bg-white border border-gray-300 hover:bg-gray-100 focus:ring-gray-100 dark:bg-gray-800 dark:text-white dark:border-gray-600 dark:hover:bg-gray-700 dark:hover:border-gray-600 dark:focus:ring-gray-700",
    color === "green" &&
      "text-white bg-green-700 hover:bg-green-800 focus:ring-green-300 dark:bg-green-600 dark:hover:bg-green-700 dark:focus:ring-green-800",
    color === "red" &&
      "text-white bg-red-700 hover:bg-red-800 focus:ring-red-300 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-900",
    color === "yellow" &&
      "text-white bg-yellow-400 hover:bg-yellow-500 focus:ring-yellow-300 dark:focus:ring-yellow-900",
    color === "purple" &&
      "text-white bg-purple-700 hover:bg-purple-800 focus:ring-purple-300 dark:bg-purple-600 dark:hover:bg-purple-700 dark:focus:ring-purple-900",

    size === "xs" && "px-3 py-2 text-xs",
    size === "sm" && "px-3 py-2 text-sm",
    size === "base" && "px-5 py-2.5 text-sm",
    size === "lg" && "px-5 py-3 text-base",
    size === "xl" && "px-6 py-3.5 text-base",
    size === "square" && "p-2.5",

    clsList,
  ]
)

const iconCls = [
  size === "xs" && "w-3 h-3",
  size === "sm" && "w-3 h-3",
  size === "base" && "w-3.5 h-3.5",
  size === "lg" && "w-4 h-4",
  size === "xl" && "w-4 h-4",

  iconClass,
]

// outline buttons
// text-blue-700 hover:text-white border border-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center me-2 mb-2 dark:border-blue-500 dark:text-blue-500 dark:hover:text-white dark:hover:bg-blue-500 dark:focus:ring-blue-800">Default</button>
// text-gray-900 hover:text-white border border-gray-800 hover:bg-gray-900 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center me-2 mb-2 dark:border-gray-600 dark:text-gray-400 dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-gray-800">Dark</button>
// text-green-700 hover:text-white border border-green-700 hover:bg-green-800 focus:ring-4 focus:outline-none focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center me-2 mb-2 dark:border-green-500 dark:text-green-500 dark:hover:text-white dark:hover:bg-green-600 dark:focus:ring-green-800">Green</button>
// text-red-700 hover:text-white border border-red-700 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center me-2 mb-2 dark:border-red-500 dark:text-red-500 dark:hover:text-white dark:hover:bg-red-600 dark:focus:ring-red-900">Red</button>
// text-yellow-400 hover:text-white border border-yellow-400 hover:bg-yellow-500 focus:ring-4 focus:outline-none focus:ring-yellow-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center me-2 mb-2 dark:border-yellow-300 dark:text-yellow-300 dark:hover:text-white dark:hover:bg-yellow-400 dark:focus:ring-yellow-900">Yellow</button>
// text-purple-700 hover:text-white border border-purple-700 hover:bg-purple-800 focus:ring-4 focus:outline-none focus:ring-purple-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center me-2 mb-2 dark:border-purple-400 dark:text-purple-400 dark:hover:text-white dark:hover:bg-purple-500 dark:focus:ring-purple-900">Purple</button>
---

{
  type === "link" ? (
    <a class:list={[cls]} {...attrs}>
      {iconLeft && <Icon name={iconLeft} class:list={twMerge(["me-2", iconCls])} />}
      <slot />
      {iconRight && <Icon name={iconRight} class:list={twMerge(["ms-2", iconCls])} />}
    </a>
  ) : (
    <button type={type} class:list={[cls]} {...attrs}>
      {iconLeft && <Icon name={iconLeft} class:list={twMerge(["me-2", iconCls])} />}
      <slot />
      {iconRight && <Icon name={iconRight} class:list={twMerge(["ms-2", iconCls])} />}
    </button>
  )
}
